BlockingQueue(I)

*******************一、定义*******************
用于存放任务、元素的容器
生产者线程从队列尾部放入元素，消费者线程从队列头部取出元素

*******************二、常用方法*******************
      抛出异常   特殊值	    阻塞	    超时（返回特殊值）
插入  add(e)	    offer(e)	put(e)	offer(e,time,unit)
取出  remove()	poll()	    take()	poll(time,unit)
检查  element()	peek()

当操作阻塞时：
第一列的方法 - 直接抛出异常
第二列的方法 - 返回特殊值
第三列的方法 - 将一直阻塞，直到可以继续操作
第四列的方法 - 设置一个超时值，阻塞时长超过这个值便返回一个特殊值

检查：检查队列是否有元素，默认获取队列头元素

*******************三、常用实现类*******************
1.ArrayBlockingQueue
有界的数组队列，初始化时必须指定长度，之后长度不能改变
遵循先进先出原则
2.LinkedBlockingQueue
边界可有可无的链表队列，可以指定长度，之后长度不能改变。也可以不指定，之后长度可变，最大长度是Integer.MAX_VALUE
遵循先进先出原则
3.DelayQueue
无界的延时队列，只有在元素到期时（元素内部应设置到期时间）才能被取出
头部是延迟期满后保存时间最长的Delayed元素
队列中的元素实现Delayed接口（Delayed接口继承了Comparable接口）
也就是说此队列中的元素不遵循先进先出，而是遵循自己制定的规则
应用场景：定时关闭连接，缓存对象和超时处理等
不能放置null对象
4.PriorityBlockingQueue
无界的优先级队列
队列中的元素必须实现Comparable接口
也就是说此队列中的元素不遵循先进先出，而是遵循自己制定的规则
初始化时可以指定长度，但长度可变，所以是无界的
可放置null元素
5.SynchronousQueue
有界的同步队列
此队列只能存放一个元素，只有当此元素被消费之后，才能放入其他元素，否则队列将阻塞线程